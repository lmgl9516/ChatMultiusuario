
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.net.Socket;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author lmgl9
 */
public class Cliente extends javax.swing.JFrame {

    /**
     * Creates new form cliente
     */
    static Socket s;
    static DataInputStream din;
    static DataOutputStream dout;
    public static int passwordON=0;
    public static String msgin ="";
    public static String msgout ="";
    public static String passPriv;
    public static String name;
    public static String nameOtro;
    public static int passPublicYo;
    public static int passPublicOtro;
    public static int answer;
    public static int llaveAleatoria;
    public static String[] Hash = {"a","25","b","36","c","41","d","48","e","89","f","63","g","25","h","58",
                                   "i","15","j","40","k","19","l","20","m","77","n","90","o","66","p","70",
                                   "q","93","r","49","s","83","t","55","u","69","v","11","w","17","x","80",
                                   "y","57","z","27","0","42","1","13","2","37","4","86","5","91","6","42",
                                   "7","49","8","79","9","50"};
    public Cliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        msg_text = new javax.swing.JTextPane();
        msg_send = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        msg_area = new javax.swing.JTextArea();
        password = new javax.swing.JTextField();
        passwordBoton = new javax.swing.JButton();
        privada = new javax.swing.JTextField();
        privadaBoton = new javax.swing.JButton();
        mensaje = new javax.swing.JLabel();
        crypto = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Aleatoria = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        llpr = new javax.swing.JLabel();
        llpb = new javax.swing.JLabel();
        txp = new javax.swing.JLabel();
        hsh = new javax.swing.JLabel();
        frm = new javax.swing.JLabel();
        dfrm = new javax.swing.JLabel();
        llalt = new javax.swing.JLabel();
        dfrcf = new javax.swing.JLabel();
        llaalcf = new javax.swing.JLabel();
        sobdig = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        llpr1 = new javax.swing.JLabel();
        llpb1 = new javax.swing.JLabel();
        txp1 = new javax.swing.JLabel();
        hsh1 = new javax.swing.JLabel();
        frm1 = new javax.swing.JLabel();
        dfrm1 = new javax.swing.JLabel();
        llalt1 = new javax.swing.JLabel();
        dfrcf1 = new javax.swing.JLabel();
        llaalcf1 = new javax.swing.JLabel();
        sobdig1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        config = new javax.swing.JTextField();
        configBoton = new javax.swing.JButton();
        usuarios = new javax.swing.JComboBox<>();
        priv = new javax.swing.JTextField();
        privbt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(new java.awt.Color(153, 255, 0));

        msg_text.setEnabled(false);
        jScrollPane1.setViewportView(msg_text);

        msg_send.setBackground(new java.awt.Color(153, 255, 0));
        msg_send.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        msg_send.setText("ENVIAR");
        msg_send.setEnabled(false);
        msg_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_sendActionPerformed(evt);
            }
        });

        msg_area.setBackground(new java.awt.Color(204, 255, 204));
        msg_area.setColumns(20);
        msg_area.setRows(5);
        jScrollPane2.setViewportView(msg_area);

        password.setEnabled(false);

        passwordBoton.setText("ACEPTAR");
        passwordBoton.setEnabled(false);
        passwordBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordBotonActionPerformed(evt);
            }
        });

        privada.setText("password");
        privada.setEnabled(false);
        privada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                privadaActionPerformed(evt);
            }
        });

        privadaBoton.setText("DESENCRIPTAR");
        privadaBoton.setEnabled(false);
        privadaBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                privadaBotonActionPerformed(evt);
            }
        });

        mensaje.setText("Chat 2.0");

        jLabel1.setText("creador de llaves");

        jLabel2.setText("llave privada");

        jLabel3.setText("llave publica");

        jLabel4.setText("texto plano");

        jLabel5.setText("hash");

        jLabel6.setText("firma");

        jLabel7.setText("doc firmado");

        jLabel8.setText("llave aleatoria");

        jLabel9.setText("doc firm cifr");

        jLabel10.setText("llave alt cifr");

        jLabel11.setText("sobre digital");

        llpr.setText("-");

        llpb.setText("-");

        txp.setText("-");

        hsh.setText("-");

        frm.setText("-");

        dfrm.setText("-");

        llalt.setText("-");

        dfrcf.setText("-");

        llaalcf.setText("-");

        sobdig.setText("-");

        jLabel12.setText("llave aleatoria");

        jLabel13.setText("doc firm cifr");

        jLabel14.setText("llave alt cifr");

        jLabel15.setText("sobre digital");

        llpr1.setText("-");

        llpb1.setText("-");

        txp1.setText("-");

        hsh1.setText("-");

        frm1.setText("-");

        dfrm1.setText("-");

        llalt1.setText("-");

        dfrcf1.setText("-");

        llaalcf1.setText("-");

        sobdig1.setText("-");

        jLabel16.setText("llave privada");

        jLabel17.setText("llave publica");

        jLabel18.setText("texto plano");

        jLabel19.setText("hash");

        jLabel20.setText("firma");

        jLabel21.setText("doc firmado");

        jLabel22.setText("mensaje enviado");

        jLabel23.setText("mensaje recibido");

        config.setEnabled(true);

        configBoton.setText("configurar");
        configBoton.setEnabled(true);
        configBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configBotonActionPerformed(evt);
            }
        });

        priv.setEnabled(false);

        privbt.setText("AÃ‘ADIR");
        privbt.setEnabled(false);
        privbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                privbtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(Aleatoria, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(mensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(msg_send, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7))
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dfrm)
                                            .addComponent(frm)
                                            .addComponent(hsh)
                                            .addComponent(txp)
                                            .addComponent(llpb)
                                            .addComponent(llpr)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel11))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(sobdig)
                                            .addComponent(llaalcf)
                                            .addComponent(dfrcf)
                                            .addComponent(llalt)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addComponent(jLabel22)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dfrm1)
                                    .addComponent(frm1)
                                    .addComponent(hsh1)
                                    .addComponent(txp1)
                                    .addComponent(llpb1)
                                    .addComponent(llpr1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sobdig1)
                                    .addComponent(llaalcf1)
                                    .addComponent(dfrcf1)
                                    .addComponent(llalt1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(jLabel23)))
                        .addGap(117, 117, 117))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addComponent(privadaBoton))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(password, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(passwordBoton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(privada, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                        .addComponent(crypto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(usuarios, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(config)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(configBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(priv)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(privbt, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Aleatoria, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(config, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(configBoton)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(passwordBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(crypto, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(privada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(privadaBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(usuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(privbt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(msg_send, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(llpr))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(llpb))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(hsh))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(frm))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(dfrm))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(llalt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(dfrcf))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(llaalcf))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(sobdig)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(llpr1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(llpb1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(txp1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(hsh1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(frm1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(dfrm1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(llalt1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(dfrcf1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(llaalcf1))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(sobdig1)))))
        );

        pack();
    }// </editor-fold>                        
    public static String hash(String texto) {
        char c;
        int i=0;
        String hash="";
        int intermedio=0;
        for (i = 0; i < texto.length(); i++){
            c = texto.charAt(i); 
            for (int j = 0; j < 69; j++) {
                if (Hash[j].charAt(0)==c) {
                    intermedio=intermedio+(i*Integer.parseInt(Hash[j+1]));
                }
            }
        }
        String aux =String.valueOf(intermedio);
        int l=aux.length();
        for (int k = 0; k < 9-l; k++) {
            hash=hash+"0";
        }
        hash=hash+aux;
        
        return hash;
    }
    public static String encripcion(String texto, String llaveprivada) {
        String cifrado="";
        int help=llaveprivada.length()-String.valueOf(answer).length();
        int llave=Integer.parseInt(llaveprivada.substring(help));
        for (int i = 0; i < texto.length(); i++){
            char c = texto.charAt(i);        
            int ascii = (int) c;
            ascii=ascii+llave;
            cifrado=cifrado+Character.toString((char)ascii);
        }
        return cifrado;
    }
    public static String desencripcion(String texto, int llavepublica) {
        String descifrado="";
        for (int i = 0; i < 9; i++){
            char c = texto.charAt(i);        
            int ascii = (int) c;
            ascii=ascii-llavepublica;
            descifrado=descifrado+Character.toString((char)ascii);
        }
        return descifrado;
    }
    public static String desencripcionAleatoria(String texto, String llaveprivada) {
        String descifrado="";
        int llave=0;
        if(llaveprivada.length()>1)
        {
        int help=llaveprivada.length()-String.valueOf(answer).length();
        llave=Integer.parseInt(llaveprivada.substring(help));
        }
        else
        {
        llave=Integer.parseInt(llaveprivada);    
        }
        for (int i = 0; i < texto.length(); i++){
            char c = texto.charAt(i);        
            int ascii = (int) c;
            ascii=ascii-llave;
            descifrado=descifrado+Character.toString((char)ascii);
        }
        return descifrado;
    }
    private void msg_sendActionPerformed(java.awt.event.ActionEvent evt) {                                         
       if(passwordON == 0)
        {
           mensaje.setText("GENERE PAR DE LLAVES");
        }
       else
       {
           try{
            String x = String.valueOf(usuarios.getSelectedItem());
            try (BufferedReader br = new BufferedReader(new FileReader(name+"/"+x+".cer")))
		{

			String sCurrentLine;

			while ((sCurrentLine = br.readLine()) != null) {
				passPublicOtro=Integer.valueOf(sCurrentLine);
                                llpb1.setText(String.valueOf(passPublicOtro));
			}

		} catch (IOException e) {
			e.printStackTrace();
		}
            Random rn = new Random();
            llaveAleatoria = rn.nextInt(9)+1;
            llalt.setText(String.valueOf(llaveAleatoria));
            txp.setText(msg_text.getText().trim());
            msgout=msg_text.getText().trim();
            msg_area.setText(msg_area.getText()+"\n"+msgout);
            hsh.setText(hash(msgout));
            frm.setText(encripcion(hash(msgout),passPriv));
            dfrm.setText(encripcion(hash(msgout),passPriv)+msgout);
            dfrcf.setText(encripcion((encripcion(hash(msgout),passPriv)+msgout),String.valueOf(llaveAleatoria)));
            llaalcf.setText(encripcion(String.valueOf(llaveAleatoria),String.valueOf(passPublicOtro)));
            sobdig.setText(encripcion((encripcion(hash(msgout),passPriv)+msgout),String.valueOf(llaveAleatoria))+encripcion(String.valueOf(llaveAleatoria),String.valueOf(passPublicOtro)));
            dout.writeUTF("@"+x+" "+encripcion((encripcion(hash(msgout),passPriv)+msgout),String.valueOf(llaveAleatoria))+encripcion(String.valueOf(llaveAleatoria),String.valueOf(passPublicOtro)));
            mensaje.setText(hash(msgout));
            msg_text.setText("");
            }catch(Exception e){
      
            }
       }

        
// TODO add your handling code here:
    }                                        

    private void passwordBotonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        
        if(passwordON == 0)
        {
           passPriv=password.getText().trim();
           Random rn = new Random();
           answer = rn.nextInt(9) +1 ;
           passPriv=passPriv+answer;
           passPublicYo=answer;
           passwordON=1;
           llpr.setText(passPriv);
           llpb.setText(String.valueOf(passPublicYo));
           try {
               dout.writeUTF(String.valueOf("@@++--"+passPublicYo));
           } catch (Exception e) {
               
           }
           mensaje.setText("LLAVES GENERADAS EXITOSAMENTE");
           privada.setEnabled(true);
           privadaBoton.setEnabled(true);
           msg_text.setEnabled(true);
           msg_send.setEnabled(true);
        }
       else
       {
        mensaje.setText("PAR DE LLAVES YA EXISTENTES");
       }
        
    }                                             

    private void privadaBotonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        String llaveCompuesta="";
        try (BufferedReader br = new BufferedReader(new FileReader(name+"/"+name+".cer")))
		{
			String sCurrentLine;
			while ((sCurrentLine = br.readLine()) != null) {
                            llaveCompuesta=privada.getText()+sCurrentLine;
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
        
        if (llaveCompuesta.equals(passPriv))
        {
            try (BufferedReader br = new BufferedReader(new FileReader(name+"/"+nameOtro+".cer")))
		{

			String sCurrentLine;

			while ((sCurrentLine = br.readLine()) != null) {
				passPublicOtro=Integer.valueOf(sCurrentLine);
                                llpb1.setText(String.valueOf(passPublicOtro));
			}

		} catch (IOException e) {
			e.printStackTrace();
		}
            sobdig1.setText(msgin);
            String mensajePrevio=desencripcionAleatoria(msgin,passPriv);
            llaalcf1.setText(msgin.substring(msgin.length()-1));
            int aleatoriaOtro=Integer.parseInt(mensajePrevio.substring(mensajePrevio.length()-1));
            llalt1.setText(String.valueOf(aleatoriaOtro));
            dfrcf1.setText(msgin.substring(0, msgin.length()-1));
            String resultadoplano=desencripcionAleatoria(msgin.substring(0, msgin.length()-1),String.valueOf(aleatoriaOtro));
            dfrm1.setText(resultadoplano);
            String resultado=desencripcion(resultadoplano,passPublicOtro);
            frm1.setText(resultadoplano.substring(0,9));
            hsh1.setText(resultado);
            if(resultado.equals(hash(resultadoplano.substring(9))))
            {
                txp1.setText(resultadoplano.substring(9));
                mensaje.setText("HASH COINCIDEN CORRECTAMENTE " + resultado);
                msg_area.setText(msg_area.getText().trim()+"\n \t\t"+nameOtro+": "+ resultadoplano.substring(9)); 
            }
        }

    }                                            

    private void configBotonActionPerformed(java.awt.event.ActionEvent evt) {                                            
    
       name=config.getText().trim();
        try {
            dout.writeUTF(name);
        } catch (IOException ex) {
            Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
        }
        config.setText("");
       
    }                                           

    private void privadaActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void privbtActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        if(passwordON == 0)
        {
           try (BufferedReader br = new BufferedReader(new FileReader(name+"/"+name+".cer")))
		{
			String sCurrentLine;
			while ((sCurrentLine = br.readLine()) != null) {
				passPublicYo=Integer.valueOf(sCurrentLine);
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
           passPriv=priv.getText().trim();
           passPriv=passPriv+passPublicYo;
           passwordON=1;
           llpr.setText(passPriv);
           llpb.setText(String.valueOf(passPublicYo));
           mensaje.setText("LLAVES COINCIDEN CORRECTAMENTE");
           priv.setEnabled(false);
           privbt.setEnabled(false);
           msg_text.setEnabled(true);
           msg_send.setEnabled(true);
           privada.setEnabled(true);
           privadaBoton.setEnabled(true);
        }
       else
       {
        mensaje.setText("PAR DE LLAVES YA EXISTENTES");
       }
    }                                      

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente().setVisible(true);
            }
        });
        
        try{
            
            s = new Socket("127.0.0.1",2222);
            din = new DataInputStream(s.getInputStream());
            dout = new DataOutputStream(s.getOutputStream());
            msgin="";
            while(msgin!=null){
                
                msgin=din.readUTF();
                System.out.println(msgin);
                TimeUnit.SECONDS.sleep(2);
                 
                switch (msgin.substring(0,6))
                {
                    case "@@++--": passPublicOtro=Integer.parseInt(msgin.substring(6,msgin.length()));
                                   llpb1.setText(msgin.substring(6,msgin.length()));
                                   mensaje.setText(String.valueOf(passPublicOtro));
                                   crypto.setText(msgin);
                                   break;
                    case "-.-///": msg_area.setText(msg_area.getText().trim()+"\n"+msgin.substring(6,msgin.length()));
                                   break;
                    case "+*-+*-": msg_area.setText(msg_area.getText().trim()+"\n"+msgin.substring(6,msgin.length()));
                                   password.setEnabled(true);
                                   passwordBoton.setEnabled(true);
                                   config.setEnabled(false);
                                   configBoton.setEnabled(false);
                                   msg_area.setText(msg_area.getText().trim()+"\n Favor de generar su par de llaves");
                                   break;
                    case "%&/()=":usuarios.addItem(msgin.substring(6,msgin.length()));
                                  break;
                    case "#$%#$%":nameOtro=msgin.substring(7,msgin.length());
                                   mensaje.setText("mensaje entrande de: "+nameOtro);
                                  break;
                    case "=?=?=?":config.setEnabled(false);
                                  configBoton.setEnabled(false);
                                  priv.setEnabled(true);
                                  privbt.setEnabled(true);
                                  break;
                    default:       crypto.setText(msgin);
                                   break;
                }
                 
                
            }
                   
        }catch(Exception e){
            
        }
        
        
    }

    // Variables declaration - do not modify                     
    private static javax.swing.JLabel Aleatoria;
    private static javax.swing.JTextField config;
    private static javax.swing.JButton configBoton;
    private static javax.swing.JLabel crypto;
    private static javax.swing.JLabel dfrcf;
    private static javax.swing.JLabel dfrcf1;
    private static javax.swing.JLabel dfrm;
    private static javax.swing.JLabel dfrm1;
    private static javax.swing.JLabel frm;
    private static javax.swing.JLabel frm1;
    private static javax.swing.JLabel hsh;
    private static javax.swing.JLabel hsh1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JLabel llaalcf;
    private static javax.swing.JLabel llaalcf1;
    private static javax.swing.JLabel llalt;
    private static javax.swing.JLabel llalt1;
    private static javax.swing.JLabel llpb;
    private static javax.swing.JLabel llpb1;
    private static javax.swing.JLabel llpr;
    private static javax.swing.JLabel llpr1;
    private static javax.swing.JLabel mensaje;
    private static javax.swing.JTextArea msg_area;
    private static javax.swing.JButton msg_send;
    private static javax.swing.JTextPane msg_text;
    private static javax.swing.JTextField password;
    private static javax.swing.JButton passwordBoton;
    private static javax.swing.JTextField priv;
    private static javax.swing.JTextField privada;
    private static javax.swing.JButton privadaBoton;
    private static javax.swing.JButton privbt;
    private static javax.swing.JLabel sobdig;
    private static javax.swing.JLabel sobdig1;
    private static javax.swing.JLabel txp;
    private static javax.swing.JLabel txp1;
    private static javax.swing.JComboBox<String> usuarios;
    // End of variables declaration                   
}
